class GestureHandler{constructor(e){this.element=e,this.startX=0,this.startY=0,this.endX=0,this.endY=0,this.threshold=50,this.callbacks={swipeUp:null,swipeDown:null,swipeLeft:null,swipeRight:null},this.eventListeners={},this.checkExistingGestureListener(),this.addEventListeners()}checkExistingGestureListener(){let e=this.element._gestureListener;if(e){console.error("A gesture event listener is already attached to the element. You can only have one gesture event listener per element.");return}this.element._gestureListener=this}addEventListeners(){let e=e=>{this.startX=e.touches[0].clientX,this.startY=e.touches[0].clientY},t=e=>{this.updateSwipeData(e)},s=e=>{this.endX=e.changedTouches[0].clientX,this.endY=e.changedTouches[0].clientY,this.handleGesture()};this.element.addEventListener("touchstart",e,!1),this.element.addEventListener("touchmove",t,!1),this.element.addEventListener("touchend",s,!1),this.eventListeners.touchstartListener=e,this.eventListeners.touchmoveListener=t,this.eventListeners.touchendListener=s}removeEventListeners(){this.element.removeEventListener("touchstart",this.eventListeners.touchstartListener),this.element.removeEventListener("touchmove",this.eventListeners.touchmoveListener),this.element.removeEventListener("touchend",this.eventListeners.touchendListener),delete this.element._gestureListener}swipeUp(e){return this.callbacks.swipeUp=e,this}swipeDown(e){return this.callbacks.swipeDown=e,this}swipeLeft(e){return this.callbacks.swipeLeft=e,this}swipeRight(e){return this.callbacks.swipeRight=e,this}updateSwipeData(e){let t=this.element.offsetWidth,s=this.element.offsetHeight;window.innerWidth,window.innerHeight;let i=e.touches[0].clientX,h=e.touches[0].clientY,n=i-this.startX,l=h-this.startY,a={percentX:Math.abs(n)/t*100,percentY:Math.abs(l)/s*100,regionX:i/t*100,regionY:h/s*100};Math.abs(n)>Math.abs(l)?n>this.threshold&&this.callbacks.swipeRight?this.callbacks.swipeRight(a):n<-this.threshold&&this.callbacks.swipeLeft&&this.callbacks.swipeLeft(a):l>this.threshold&&this.callbacks.swipeDown?this.callbacks.swipeDown(a):l<-this.threshold&&this.callbacks.swipeUp&&this.callbacks.swipeUp(a)}handleGesture(){let e=this.element.offsetWidth,t=this.element.offsetHeight,s=this.endX-this.startX,i=this.endY-this.startY,h={percentX:Math.abs(s)/e*100,percentY:Math.abs(i)/t*100,regionX:this.endX/e*100,regionY:this.endY/t*100};Math.abs(s)>Math.abs(i)?s>this.threshold&&this.callbacks.swipeRight?this.callbacks.swipeRight(h):s<-this.threshold&&this.callbacks.swipeLeft&&this.callbacks.swipeLeft(h):i>this.threshold&&this.callbacks.swipeDown?this.callbacks.swipeDown(h):i<-this.threshold&&this.callbacks.swipeUp&&this.callbacks.swipeUp(h)}destroy(e){if(e)e in this.callbacks&&(this.callbacks[e]=null);else{let t=Object.values(this.callbacks).some(e=>null!==e);t||(this.callbacks={swipeUp:null,swipeDown:null,swipeLeft:null,swipeRight:null})}let s=Object.values(this.callbacks).some(e=>null!==e);s||this.removeEventListeners()}}